pipeline {
    agent any
    tools {
        maven 'maven'
    }
    stages {
        stage("Test") {
            steps {
                slackSend channel: 'jenkins-pipeline', message: 'Job Started'
                sh "mvn test"
            }
        }
        stage("Build") {
            steps {
                sh "mvn package"
            }
        }
        stage("Deploy on Test") {
            steps {
                deployTestServer()
            }
        }
        stage("Deploy on Prod") {
            input {
                message "Should we continue?"
                ok "Yes we Should"
            }
            steps {
                deployProdServer()
            }
        }
    }
    post {
        always {
            echo "========always========"
        }
        success {
            echo "========pipeline executed successfully ========"
            slackSend channel: 'jenkins-pipeline', message: 'Success'
        }
        failure {
            echo "========pipeline execution failed========"
            slackSend channel: 'jenkins-pipeline', message: 'Job Failed'
        }
    }
}

def deployTestServer() {
    sshPublisher(
        continueOnError: false,
        publishers: [
            sshPublisherDesc(
                configName: 'test-server',
                transfers: [
                    sshTransfer(
                        sourceFiles: 'target/*.war',
                        remoteDirectory: '/var/lib/tomcat9/webapps/app'
                    )
                ]
            )
        ]
    )
}

def deployProdServer() {
    sshPublisher(
        continueOnError: false,
        publishers: [
            sshPublisherDesc(
                configName: 'prod-server',
                transfers: [
                    sshTransfer(
                        sourceFiles: 'target/*.war',
                        remoteDirectory: '/var/lib/tomcat9/webapps/app'
                    )
                ]
            )
        ]
    )
}
