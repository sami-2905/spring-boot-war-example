pipeline {
    agent any
    tools {
        maven 'maven'
    }
    stages {
        stage("Test") {
            steps {
                slackSend channel: 'jenkins-pipeline', message: 'Job Started'
                sh "mvn test"
            }
        }
        stage("Build") {
            steps {
                sh "mvn package"
            }
        }
        stage("Deploy on Test") {
            steps {
                script {
                    deployTestServer()
                }
            }
        }
        stage("Deploy on Prod") {
            steps {
                input {
                    message "Should we continue?"
                    ok "Yes we Should"
                }
                script {
                    deployProdServer()
                }
            }
        }
    }
    post {
        always {
            echo "========always========"
        }
        success {
            echo "========pipeline executed successfully ========"
            slackSend channel: 'jenkins-pipeline', message: 'Success'
        }
        failure {
            echo "========pipeline execution failed========"
            slackSend channel: 'jenkins-pipeline', message: 'Job Failed'
        }
    }
}

def deployTestServer() {
    sshPublisher(
        continueOnError: false,
        publishers: [
            sshPublisherDesc(
                configName: 'testuser',
                transfers: [
                    sshTransfer(
                        sourceFiles: '*.war',
                        remoteDirectory: '/home/testuser/app/'
                    )
                ]
            )
        ]
    )
    sh "ssh testuser sudo mkdir -p /var/lib/tomcat9/webapps/app/ && sudo cp -r /home/testuser/app/*.war /var/lib/tomcat9/webapps/app/"
}

def deployProdServer() {
    sshPublisher(
        continueOnError: false,
        publishers: [
            sshPublisherDesc(
                configName: 'produser',
                transfers: [
                    sshTransfer(
                        sourceFiles: '*.war',
                        remoteDirectory: '/home/produser/app/'
                    )
                ]
            )
        ]
    )
    sh "ssh produser sudo mkdir -p /var/lib/tomcat9/webapps/app/ && sudo cp -r /home/produser/app/*.war /var/lib/tomcat9/webapps/app/"
}
